@layout MembershipLayout
@page "/signin"
@using Entertainmentcareers.net.Shared;
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject MudBlazor.ISnackbar snackBar
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage

<MudGrid Justify="Justify.Center" Class="mt-8 mb-8">
    <MudItem xs="8">
        <MudGrid Justify="Justify.Center" Class="border">
            <MudItem xs="12">
                <MudText Typo="Typo.h4" Style="font-family: 'Inter';font-weight: 700; color:#08243D;" Class="pb-2">Member Sign In</MudText>
                <MudText Typo="Typo.body1" Style="font-family: 'Inter'; color:#08243D;" Class="pb-2">Job Seeker Login. Employers should click the "Employer" tab above.</MudText>
                <MudText Typo="Typo.body2" Style="font-family: 'Inter'; color:#08243D;" Class="pb-2"><b>Not yet a member?</b> <a href="/membersfeatures" style="font-family: 'Inter'; color:#08243D; text-decoration: underline solid #08243D 1px;">Click Here to see what the membership offers</a></MudText>
            </MudItem>
            <MudItem xs="12">
                <MudGrid Class="mb-2">
                    <MudItem xs="6">
                        <MudCard>
                            <MudCardContent>
                                <EditForm Model="signIn" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                <MudGrid>
                                    <MudItem xs="12" Style="background-color:#EEF5F8" Class="border-bottom">
                                        <MudText Typo="Typo.h6" Style="font-family: 'Inter'; color:#08243D;"><b>Sign In</b></MudText>
                                     </MudItem>
                                        @{
                                            if (Error.Length > 0)
                                            {
                                                <MudItem xs="12">
                                                    <MudAlert Severity="Severity.Error" Dense="true">@Error</MudAlert>
                                                </MudItem>
                                            }
                                            if (Error1.Length > 0)
                                            {
                                                <MudItem xs="12">
                                                    <MudAlert Severity="Severity.Error" Dense="true">@Error1 <p>Resend Email Confirmation? <a style="text-decoration: none" href="/resendconfirmation">Click here.</a></p></MudAlert>
                                                </MudItem>
                                            }
                                        }
                                     <MudItem xs="12">
                                            <MudTextField Label="Email" @bind-Value="signIn.Email" Margin="Margin.Dense" Variant="Variant.Outlined" For="@(()=>signIn.Email)" Required="true"></MudTextField>
                                        <MudTextField @bind-Value="signIn.Password" Label="Password" Margin="Margin.Dense" Variant="Variant.Outlined" Class="mt-4" For="@(()=>signIn.Password)" Required="true" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowPassword" AdornmentAriaLabel="Show Password" />
                                            <MudCheckBox @bind-Checked="signIn.RememberMe" Label="Remember Me" Style="font-family: 'Inter'; color:#08243D;"></MudCheckBox>
                                        <MudGrid>
                                        <MudItem xs="3">
                                                <MudFab Size="Size.Small" ButtonType="ButtonType.Submit" Style="background-color: #689F38; color: #FFFFFF; text-transform:none;" Label="&nbsp;&nbsp;Login&nbsp;&nbsp;" />
                                        </MudItem>
                                        <MudItem xs="9">
                                                    <MudText Typo="Typo.body2" Style="font-family: 'Inter'; color:#08243D;" Class="mt-2"><a href="/forgotpassword" style="font-family: 'Inter'; color:#08243D; text-decoration: underline solid #08243D 1px;">Forget Your Password?</a></MudText>
                                        </MudItem>
                                        </MudGrid>
                                    </MudItem>
                                </MudGrid>
                                 
                </EditForm>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="1"></MudItem>
                    <MudItem xs="4">
                        <MudGrid>
                            <MudItem xs="12">
                                <MudText Typo="Typo.h6" Style="font-family: 'Inter'; color:#08243D; text-decoration: underline solid #08243D 1px;"><b><a href="/membersfeatures">Get early access to the jobs!</a></b></MudText>
                                <MudText Typo="Typo.body2" Style="font-family: 'Inter'; color:#08243D;"><span style="font-size: 11px; background-color:#42A5F5;" class="text-white rounded-1">&nbsp;MEMBERS ONLY&nbsp;</span>&nbsp;Take a look at what advantages you get with the job seeker membership. <a href="/membersfeatures" style="font-family: 'Inter'; color:#08243D; text-decoration: underline solid #08243D 1px;">Click Here</a></MudText>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>


@code {
    SignIn signIn = new SignIn();
    public string Error { get; set; } = string.Empty;
    public string Error1 { get; set; } = string.Empty;

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ShowPassword()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    public async Task HandleSubmit()
    {
        var response = await Http.PostAsJsonAsync("/api/ApplicationUser/signin", signIn);
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            await LocalStorage.SetItemAsync("token", token);
            await AuthStateProvider.GetAuthenticationStateAsync();

            snackBar.Add("Signed In Successfully...!", Severity.Success);
            navigationManager.NavigateTo("/");
        }

        if(response.StatusCode == System.Net.HttpStatusCode.BadRequest)
        {
            var error = await response.Content.ReadAsStringAsync();
            if (error != null)
            {
                if (error == "Email not confirmed!")
                {
                    Error1 = error;
                }
                else
                {
                    Error = error;
                }
            }
            navigationManager.NavigateTo("/signin");
        }
    }
}
